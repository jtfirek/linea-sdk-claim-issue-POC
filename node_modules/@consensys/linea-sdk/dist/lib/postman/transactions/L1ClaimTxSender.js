"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.L1ClaimTxSender = void 0;
const logger_1 = require("../../logger");
const enums_1 = require("../utils/enums");
const ClaimTxSender_1 = require("./ClaimTxSender");
const constants_1 = require("../../utils/constants");
class L1ClaimTxSender extends ClaimTxSender_1.ClaimTxSender {
    constructor(dataSource, l1MessageServiceContract, config, originContractAddress, loggerOptions) {
        super(dataSource, l1MessageServiceContract, config, enums_1.Direction.L2_TO_L1);
        this.l1MessageServiceContract = l1MessageServiceContract;
        this.logger = (0, logger_1.getLogger)(L1ClaimTxSender.name, loggerOptions);
        this.originContractAddress = originContractAddress;
    }
    async isRateLimitExceeded(messageFee, messageValue) {
        const rateLimitInWei = await this.l1MessageServiceContract.contract.limitInWei();
        const currentPeriodAmountInWei = await this.l1MessageServiceContract.contract.currentPeriodAmountInWei();
        return (parseFloat((currentPeriodAmountInWei + BigInt(messageFee) + BigInt(messageValue)).toString()) >
            parseFloat(rateLimitInWei.toString()) * constants_1.DEFAULT_RATE_LIMIT_MARGIN);
    }
}
exports.L1ClaimTxSender = L1ClaimTxSender;
